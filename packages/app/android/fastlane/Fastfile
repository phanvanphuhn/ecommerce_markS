default_platform(:android)

platform :android do

  desc 'Upload App to CHPlay.'
  lane :playstore do
    # ...
    upload_to_play_store(
      track: 'internal',
      package_name: ENV['PACKAGE_NAME'],
      json_key: ENV['SERVICE_ACCOUNT_JSON'],
      aab: "./fastlane/aab/#{ENV['ENV']}/app-#{ENV['ENV']}.aab"
    )
  end

  desc 'Upload App to App Center.'
  lane :uploadToAppcenter do
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      app_name: ENV["APPCENTER_APP_NAME"],
      destinations: "#{ENV['ENV']}",
      file: "./fastlane/apk/#{ENV['ENV']}/app-#{ENV['ENV']}.apk"
    )
  end
  desc 'Upload App to Firebase.'
  lane :uploadToFirebase do
    firebase_app_distribution(
      app: "1:614963482879:android:9a6ca6db0a803eb3397cca",
      groups: "marks",
      release_notes: "#{ENV['ENV']}",
      apk_path: "./fastlane/apk/#{ENV['ENV']}/app-#{ENV['ENV']}.apk",
      firebase_cli_token: "1//0eC6rdrGBAMbgCgYIARAAGA4SNwF-L9IrYF3mIX9a9_FCyz7RJKJ6L5vlZnMNHHEU-yMElgQmOlbg5Os8YiuR6AL6SPo-TBZlS1A",
      )
  end

  desc 'Build Application'
  lane :build do
    environment = "#{ENV['ENV']}"
    # if environment == 'development'
    #   buildNumber = firebase_app_distribution_get_latest_release(
    #     app: "1:614963482879:android:9a6ca6db0a803eb3397cca",
    #   )
    #   versionName = '0.0.1'
    #   versionCode = buildNumber['build_number'].to_i + 1
    # elsif environment == 'staging'
      buildNumber = firebase_app_distribution_get_latest_release(
        app: "1:614963482879:android:9a6ca6db0a803eb3397cca",
        firebase_cli_token: "1//0eC6rdrGBAMbgCgYIARAAGA4SNwF-L9IrYF3mIX9a9_FCyz7RJKJ6L5vlZnMNHHEU-yMElgQmOlbg5Os8YiuR6AL6SPo-TBZlS1A",
      )
      versionName = ENV['VERSION']
      versionCode = buildNumber['build_number'].to_i + 1
    # elsif environment == 'production'
    #   buildNumber = google_play_track_version_codes(
    #     track: 'internal',
    #     package_name: ENV['PACKAGE_NAME']
    #   )
    #   versionName = ENV['VERSION']
    #   versionCode = buildNumber[0].to_i + 1
    # end
    puts "Version code:#{versionCode}"
    puts "Version name:#{versionName}"

    gradle(task: 'clean', project_dir: './')

    gradle(
      task: 'assemble',
      build_type: "#{environment}".capitalize,
      project_dir: './',
      properties: {
        "versionCode" => versionCode,
        "versionName" => versionName,
      })

    copy_artifacts(
      artifacts: ["*/build/outputs/apk/#{environment}/*.apk"],
      target_path: "./fastlane/apk/#{environment}"
    )
    copy_artifacts(
      artifacts: ["*/build/outputs/apk/#{environment}/*.json"],
      target_path: "./fastlane/apk/#{environment}"
    )

    if ENV['ENV'] == "dev" || ENV['ENV'] == "staging"
      uploadToFirebase
    elsif ENV['ENV'] == "production"
      playstore
    end
  end

end
