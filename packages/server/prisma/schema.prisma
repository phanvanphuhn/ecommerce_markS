datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

generator kysely {
  provider = "prisma-kysely"
  output   = "../src/@generated/kysely"
  fileName = "types.ts"
  // Optionally generate runtime enums to a separate file
  // enumFileName = "enums.ts"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

// generator nestgraphql {
//   provider             = "prisma-nestjs-graphql"
//   output               = "../src/@generated/nestgraphql"
//   combineScalarFilters = true
//   noAtomicOperations   = true
//   emitCompiled         = true
//   purgeOutput          = true
// }

generator dbml {
  provider = "prisma-dbml-generator"
}

model ContactSearch {
  id                     Int     @id @default(autoincrement())
  salesRepEmail          String?
  hospitalId             String?
  hospital               String?
  topicsOfInterest       String?
  doctorName             String?
  doctorEmail            String?
  doctorAlternativeEmail String?
  doctorDivision         String?
  doctorProfilePhoto     String?
  doctorSpecialty        String?
  doctorSalutation       String?
  doctorTitle            String?
  doctorPhone            BigInt?
  doctorCountry          String?
}

model Complaint {
  id                       Int       @id @default(autoincrement())
  complaintId              String?
  salesRepEmail            String?
  complaintName            String?
  complaintStatus          String?
  eventDate                DateTime?
  createdDate              DateTime?
  complaintTitle           String?
  division                 String?
  country                  String?
  awareDate                DateTime?
  timeOfEvent              String?
  typeOfSituationReporting String?

  accName                         String?
  procedureType                   String?
  procedureDate                   DateTime?
  treatedFor                      String?
  procedureOutcome                String?
  reasonsForUnsuccessfulProcedure String?
}

model UserProfile {
  id Int @id @default(autoincrement())

  salesRepEmail String?
  fullName      String?
  country       String?
  division      String?
  reportingTo   String?
}

model SliderAndCommission {
  id Int @id @default(autoincrement())

  lowerBound               String?
  upperBound               String?
  variablePayoutPercentage String?
  territoryCategory        String?
  commissionPercentage     String?
}

model TerritoryCategorization {
  id Int @id @default(autoincrement())

  year              String?
  lowerBound        String?
  upperBound        String?
  territoryCategory String?
}

model Leaderboard {
  id Int @id @default(autoincrement())

  salesRepEmail          String?
  fullName               String?
  country                String?
  year                   String?
  quarter                String?
  month                  String?
  targetAchievedYtd      String?
  rankYtd                String?
  targetAchievedQtd      String?
  rankQtd                String?
  targetAchievedMtd      String?
  rankMtd                String?
  lastRefreshedTimestamp DateTime?
}
