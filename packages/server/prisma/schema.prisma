datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator kysely {
  provider = "prisma-kysely"
  output   = "../src/@generated/kysely"
  fileName = "types.ts"
  // Optionally generate runtime enums to a separate file
  // enumFileName = "enums.ts"
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

// generator nestgraphql {
//   provider             = "prisma-nestjs-graphql"
//   output               = "../src/@generated/nestgraphql"
//   combineScalarFilters = true
//   noAtomicOperations   = true
//   emitCompiled         = true
//   purgeOutput          = true
// }

generator dbml {
  provider = "prisma-dbml-generator"
}

model ContactSearch {
  id                     Int     @id @default(autoincrement())
  networkId              String?
  hospital               String?
  topicsOfInterest       String?
  doctorName             String?
  doctorEmail            String?
  doctorAlternativeEmail String?
  doctorDivision         String?
  doctorProfilePhoto     String?
  doctorSpecialty        String?
  doctorSalutation       String?
  doctorTitle            String?
  doctorPhone            String?
}

model Complaint {
  id              Int       @id @default(autoincrement())
  networkId       String?
  complaintName   String?
  recordType      String?
  complaintStatus String?
  eventDate       DateTime?
  createdDate     DateTime?
  complaintTitle  String?
  division        String?
  country         String?
  awareDate       DateTime?
  timeOfEvent     String?
}
