/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/leaderboard/dto/leaderboard.dto"]: await import("./modules/leaderboard/dto/leaderboard.dto"),
        ["./common/pagination/order-direction"]: await import("./common/pagination/order-direction")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./modules/_microsoftGraph/dto/azure-directory-user.dto"), { "AzureDirectoryUser": { businessPhones: { required: true, type: () => [String] }, displayName: { required: true, type: () => String }, givenName: { required: true, type: () => String }, jobTitle: { required: false, type: () => String }, mail: { required: true, type: () => String }, mobilePhone: { required: true, type: () => String }, officeLocation: { required: true, type: () => String }, preferredLanguage: { required: false, type: () => String }, surname: { required: false, type: () => String }, userPrincipalName: { required: true, type: () => String }, id: { required: true, type: () => String } } }], [import("./modules/contact-search/dto/contact-search.dto"), { "ContactSearchArgs": { doctorName: { required: false, type: () => String }, doctorTitle: { required: false, type: () => String }, hospital: { required: false, type: () => String }, doctorDivisions: { required: false }, doctorSpecialties: { required: false }, doctorAlternativeEmail: { required: false, type: () => String }, doctorCountry: { required: false, type: () => String }, topicsOfInterests: { required: false } }, "ContactSearchOutput": { id: { required: true, type: () => Number }, doctorName: { required: true, type: () => String }, doctorTitle: { required: true, type: () => String }, hospital: { required: true, type: () => String }, doctorDivision: { required: true, type: () => String }, doctorSpecialty: { required: true, type: () => String }, doctorEmail: { required: true, type: () => String }, doctorPhone: { required: true, type: () => String }, doctorAlternativeEmail: { required: true, type: () => String }, topicsOfInterest: { required: true, type: () => String }, doctorCountry: { required: true, type: () => String } }, "HospitalFilterArgs": { doctorSpecialties: { required: false }, doctorDivisions: { required: false }, topicsOfInterests: { required: false } } }], [import("./modules/contact-search/dto/doctor-profile.dto"), { "DoctorDetail": { id: { required: true, type: () => Number }, doctorName: { required: true, type: () => String }, doctorTitle: { required: true, type: () => String }, hospital: { required: true, type: () => String }, doctorDivision: { required: true, type: () => String }, doctorSpecialty: { required: true, type: () => String }, doctorEmail: { required: true, type: () => String }, doctorPhone: { required: true, type: () => String }, doctorSalutation: { required: true, type: () => String }, doctorAlternativeEmail: { required: true, type: () => String }, topicsOfInterest: { required: true, type: () => String }, doctorCountry: { required: true, type: () => String } } }], [import("./modules/user-profiles/dto/user-profile.dto"), { "UserProfileOutput": { id: { required: true, type: () => Number }, fullName: { required: true, type: () => String }, salesRepEmail: { required: true, type: () => String }, country: { required: true, type: () => String }, division: { required: true, type: () => String }, reportingTo: { required: true, type: () => String } } }], [import("./modules/complaints/dto/complaints.dto"), { "ComplaintsOutput": { id: { required: true, type: () => Number }, complaintId: { required: false, type: () => String }, salesRepEmail: { required: false, type: () => String }, complaintName: { required: false, type: () => String }, complaintStatus: { required: false, type: () => String }, eventDate: { required: false, type: () => String }, createdDate: { required: false, type: () => String }, complaintTitle: { required: false, type: () => String }, division: { required: false, type: () => String }, country: { required: false, type: () => String }, awareDate: { required: false, type: () => String }, timeOfEvent: { required: false, type: () => String }, typeOfSituationReporting: { required: false, type: () => String } } }], [import("./modules/leaderboard/dto/leaderboard.dto"), { "LeaderboardOuput": { id: { required: true, type: () => Number }, fullName: { required: true, type: () => String }, salesRepEmail: { required: true, type: () => String }, country: { required: true, type: () => String }, year: { required: true, type: () => String }, month: { required: true, type: () => String }, targetAchievedYtd: { required: true, type: () => String }, rankYtd: { required: true, type: () => String }, targetAchievedQtd: { required: true, type: () => String }, rankQtd: { required: true, type: () => String }, targetAchievedMtd: { required: true, type: () => String }, rankMtd: { required: true, type: () => String }, lastRefreshedTimestamp: { required: true, type: () => Date } }, "LeaderboardFilterArgs": { country: { required: false, type: () => String }, year: { required: true, type: () => String }, month: { required: false, type: () => String }, type: { required: false, enum: t["./modules/leaderboard/dto/leaderboard.dto"].LeaderboardType }, period: { required: false, enum: t["./modules/leaderboard/dto/leaderboard.dto"].LeaderboardPeriod } } }], [import("./modules/sales/dto/sales.dto"), { "SliderAndCommissionOutput": { lowerBound: { required: true, type: () => String }, upperBound: { required: true, type: () => String }, variablePayoutPercentage: { required: true, type: () => String }, territoryCategory: { required: true, type: () => String }, commissionPercentage: { required: true, type: () => String } }, "TerritoryCategorizationOutput": { year: { required: true, type: () => String }, lowerBound: { required: true, type: () => String }, upperBound: { required: true, type: () => String }, territoryCategory: { required: true, type: () => String } }, "SalesOutput": { salesRepEmail: { required: true, type: () => String }, year: { required: true, type: () => String }, quarter: { required: true, type: () => String }, month: { required: true, type: () => String }, productType: { required: true, type: () => String }, newHire: { required: true, type: () => String }, guaranttedPayout: { required: true, type: () => String }, mixedBag: { required: true, type: () => String }, variablePayByMonth: { required: true, type: () => String }, variablePayByYear: { required: true, type: () => String }, variablePayByQuarter: { required: true, type: () => String }, variablePayQ5: { required: true, type: () => String }, salesByMonth: { required: true, type: () => String }, salesByYear: { required: true, type: () => String }, salesByQuarter: { required: true, type: () => String }, targetByMonth: { required: true, type: () => String }, targetByYear: { required: true, type: () => String }, targetByQuarter: { required: true, type: () => String }, salesAchievementPercentageByMonth: { required: true, type: () => String }, salesAchievementPercentageByYear: { required: true, type: () => String }, salesAchievementPercentageByQuarter: { required: true, type: () => String }, variablePayoutPercentageByQuarter: { required: true, type: () => String }, variablePayoutPercentageByYear: { required: true, type: () => String }, targetByYearUSD: { required: true, type: () => String }, territoryCategory: { required: true, type: () => String }, commissionPercentageByQuarter: { required: true, type: () => String }, commissionPayoutByQuarter: { required: true, type: () => String }, variablePayoutByQuarter: { required: true, type: () => String }, additionalPayout: { required: true, type: () => String }, kicker: { required: true, type: () => String }, earlyBirdEligibility: { required: true, type: () => String }, earlyBird: { required: true, type: () => String }, variablePayoutPercentageQ5: { required: true, type: () => String }, variablePayoutQ5: { required: true, type: () => String }, commissionPercentageQ5: { required: true, type: () => String }, commissionPayoutQ5: { required: true, type: () => String }, salesAchievementPercentageByYear_forNewHire: { required: true, type: () => String }, variablePayoutPercentageQ5_forNewHire: { required: true, type: () => String }, commissionPercentageQ5_forNewHire: { required: true, type: () => String }, variablePayoutQ5_forNewHire: { required: true, type: () => String }, commissionPayoutQ5_forNewHire: { required: true, type: () => String }, capitalEquipment: { required: true, type: () => String }, serviceContract: { required: true, type: () => String } }, "SalesFilterArgs": { year: { required: false, type: () => String }, month: { required: false, type: () => String }, quarter: { required: false, type: () => String } } }], [import("./modules/sales/dto/mobile.sales.dto"), { "MobileSalesFilterArgs": { quarter: { required: false, type: () => String }, year: { required: false, type: () => String }, type: { required: true, type: () => Object } }, "MobileSalesOutput": { salesRepEmail: { required: true, type: () => String }, targetByQuarter: { required: false, type: () => String }, targetByYear: { required: false, type: () => String }, quarter: { required: true, type: () => String }, year: { required: true, type: () => String }, type: { required: true, type: () => Object } }, "UpserMobileSalestQuarterArgs": { targetByQuarter: { required: true, type: () => String }, year: { required: true, type: () => String }, quarter: { required: true, type: () => String } }, "UpserMobileSalestYearArgs": { targetByYear: { required: true, type: () => String }, year: { required: true, type: () => String } } }], [import("./modules/events/dto/plan-call.dto"), { "PlanCall": { id: { required: false, type: () => String }, salesForceId: { required: false, type: () => String }, subject: { required: false, type: () => String }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, description: { required: false, type: () => String }, location: { required: false, type: () => String }, account: { required: false, type: () => String }, contactName: { required: false, type: () => String }, division: { required: false, type: () => String }, activityType: { required: false, type: () => String }, activitySubtype: { required: false, type: () => String }, status: { required: false, type: () => String }, activityOwnerName: { required: false, type: () => String }, activityOwnerEmail: { required: false, type: () => String }, ownerCountry: { required: false, type: () => String }, createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } }, "PlanCallInput": {}, "PlanCallOutput": {}, "PlanCallFilterArgs": {} }], [import("./modules/search-history/dto/mobile-search-history.dto"), { "MobileSearchHistory": { id: { required: false, type: () => String }, searchQuery: { required: false, type: () => String }, searchType: { required: false, type: () => [String] }, searchResults: { required: false, type: () => Object }, createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } }, "MobileSearchHistoryInput": { searchQuery: { required: true, type: () => String }, searchType: { required: false, type: () => [String] } }, "MobileSearchHistoryOutput": { searchType: { required: false, type: () => [String] } }, "MobileSearchHistoryFilterArgs": { searchType: { required: false, type: () => [String] }, sort: { required: false, enum: t["./common/pagination/order-direction"].OrderDirection }, take: { required: false, type: () => Number }, skip: { required: false, type: () => Number } } }], [import("./modules/case-log/dto/case-log.dto"), { "CaseLog": { id: { required: false, type: () => String }, caseName: { required: true, type: () => String }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, account: { required: false, type: () => String }, location: { required: false, type: () => String }, contact: { required: false, type: () => String }, secondaryContact: { required: false, type: () => String }, activityOwnerName: { required: false, type: () => String }, activityOwnerEmail: { required: false, type: () => String }, status: { required: false, type: () => String }, productIds: { required: false, type: () => [String] }, photoPaths: { required: false, type: () => [String] }, createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } }, "CaseLogInput": { files: { required: false, type: () => Object } }, "CaseLogOutput": {}, "CaseLogFilterArgs": {} }], [import("./modules/products/dto/products.dto"), { "Product": { id: { required: false, type: () => String }, upn: { required: false, type: () => String }, upnDescription: { required: false, type: () => String }, country: { required: false, type: () => String }, createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } }, "ProductInput": {}, "ProductOutput": {}, "ProductFilterArgs": {} }]], "controllers": [] }, "@nestjs/graphql/plugin": { "models": [[import("./modules/auth/dto/login.input"), { "LoginInput": { email: {}, password: {} } }], [import("./modules/auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./modules/auth/dto/signup.input"), { "SignupInput": { email: {}, password: {}, firstName: { nullable: true }, lastName: { nullable: true } } }], [import("./modules/auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }]] } };
};